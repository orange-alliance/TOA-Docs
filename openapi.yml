openapi: 3.0.0
info:
  title: The Orange Alliance API
  version: 1.0.0
  description: 'The Goal of TOA API is to provide us, and potential outside users a way to query our databases.'
servers:
  - url: 'https://theorangealliance.org/api'
components:
  responses:
    unfinished:
      description: Unfinished.
  schemas:
    AwardRecipient:
      type: object
      properties:
        awards_key:
          type: string
        event_key:
          type: string
        award_key:
          type: string
        team_key:
          type: number
        receiver_name:
          type: string
        award_name:
          type: string
        award:
          $ref: '#/components/schemas/Award'
        team:
          $ref: '#/components/schemas/Team'
    Media:
      type: object
      properties:
        media_key:
          type: string
        event_key:
          type: string
        team_key:
          type: string
        media_type:
          type: number
        is_primary:
          type: boolean
        media_title:
          type: string
        link:
          type: string
    EventInsights:
      type: object
      properties:
        high_score_match:
          $ref: '#/components/schemas/Match'
        average_match_score:
          type: number
        average_winning_score:
          type: number
        average_winning_margin:
          type: number
        game:
          oneOf:
            - $ref: '#/components/schemas/RoverRuckusInsights'
            - $ref: '#/components/schemas/RelicRecoveryInsights'
            - $ref: '#/components/schemas/SkyStoneInsights'
            - $ref: '#/components/schemas/UltimateGoalInsights'
            - $ref: '#/components/schemas/FreightFrenzyInsights'
    Award:
      type: object
      properties:
        award_key:
          type: string
        award_type:
          type: string
        award_description:
          type: string
        display_order:
          type: number
    EventType:
      type: object
      properties:
        event_type_key:
          type: string
        description:
          type: string
    MatchParticipant:
      type: object
      properties:
        match_participant_key:
          type: string
        match_key:
          type: string
        team_key:
          type: string
        station:
          type: number
        station_status:
          type: number
        ref_status:
          type: number
        team:
          $ref: '#/components/schemas/Team'
        is_league_team:
          type: boolean
    MatchDetails:
      type: object
      properties:
        match_detail_key:
          type: string
        match_key:
          type: string
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
    EventLiveStream:
      type: object
      properties:
        stream_key:
          type: string
        event_key:
          type: string
        channel_name:
          type: string
        stream_name:
          type: string
        stream_type:
          type: number
        is_active:
          type: boolean
        url:
          type: string
        start_datetime:
          type: string
        end_datetime:
          type: string
        channel_url:
          type: number
    League:
      type: object
      properties:
        league_key:
          type: string
        region_key:
          type: string
        season_key:
          type: string
        league_division:
          type: string
        league_description:
          type: string
    Alliance:
      type: object
      properties:
        seed:
          type: number
        captain:
          $ref: '#/components/schemas/Team'
        pick1:
          $ref: '#/components/schemas/Team'
        pick2:
          $ref: '#/components/schemas/Team'
          nullable: true
    Match:
      type: object
      properties:
        match_key:
          type: string
        event_key:
          type: string
        tournament_level:
          type: number
        scheduled_time:
          type: string
        match_name:
          type: string
        play_number:
          type: number
        field_number:
          type: number
        prestart_time:
          type: string
        match_start_time:
          type: string
        prestart_count:
          type: number
        cycle_time:
          type: string
        red_score:
          type: number
        blue_score:
          type: number
        red_penalty:
          type: number
        blue_penalty:
          type: number
        red_auto_score:
          type: number
        blue_auto_score:
          type: number
        red_tele_score:
          type: number
        blue_tele_score:
          type: number
        red_end_score:
          type: number
        blue_end_score:
          type: number
        video_url:
          type: number
        participants:
          type: array
          items:
            $ref: '#/components/schemas/EventParticipant'
    WebAnnouncement:
      type: object
      properties:
        announcement_key:
          type: string
        title:
          type: number
        publish_date:
          type: number
        is_active:
          type: boolean
        text:
          type: string
        author:
          type: string
    TeamSeasonRecord:
      type: object
      properties:
        wins:
          type: number
        losses:
          type: number
        ties:
          type: number
    Team:
      type: object
      properties:
        team_key:
          type: string
        region_key:
          type: string
        league_key:
          type: string
        team_number:
          type: number
        team_name_short:
          type: string
        team_name_long:
          type: string
        robot_name:
          type: string
        last_active:
          type: number
        city:
          type: string
        state_prov:
          type: string
        zip_code:
          type: number
        country:
          type: string
        rookie_year:
          type: number
        website:
          type: string
    Ranking:
      type: object
      properties:
        rank_key:
          type: string
        event_key:
          type: string
        team_key:
          type: string
        rank:
          type: number
        rank_change:
          type: number
        opr:
          type: number
        np_opr:
          type: number
        wins:
          type: number
        losses:
          type: number
        ties:
          type: number
        highest_qual_score:
          type: number
        ranking_points:
          type: number
        qualifying_points:
          type: number
        tie_breaker_points:
          type: number
        disqualified:
          type: number
        played:
          type: number
        team:
          $ref: '#/components/schemas/Team'
    EventParticipant:
      type: object
      properties:
        event_participant_key:
          type: string
        event_key:
          type: string
        team_key:
          type: string
        is_active:
          type: boolean
        card_status:
          type: string
        team:
          $ref: '#/components/schemas/Team'
        event:
          $ref: '#/components/schemas/Event'
        is_league_team:
          type: boolean
        league_team_name:
          type: string
    Region:
      type: object
      properties:
        region_key:
          type: string
        description:
          type: string
    Event:
      type: object
      properties:
        event_key:
          type: string
        season_key:
          type: string
        region_key:
          type: string
        league_key:
          type: string
        event_code:
          type: string
        event_type_key:
          type: string
        division_key:
          type: number
        division_name:
          type: string
        event_name:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        week_key:
          type: string
        city:
          type: string
        state_prov:
          type: string
        country:
          type: string
        venue:
          type: string
        website:
          type: string
        time_zone:
          type: string
        is_public:
          type: boolean
        data_source:
          type: number
    Season:
      type: object
      properties:
        season_key:
          type: string
        description:
          type: string
        is_active:
          type: string
    LeagueDiv:
      type: object
      properties:
        division_key:
          type: string
        league_key:
          type: string
        region_key:
          type: string
        season_key:
          type: string
        division_description:
          type: string
    FreightFrenzyInsights:
      type: object
      properties:
        auto_percent_partially_in_storage:
          type: number
        auto_percent_complete_in_storage:
          type: number
        auto_percent_partially_in_warehouse:
          type: number
        auto_percent_completely_in_warehouse:
          type: number
        auto_percent_bonuses_earned:
          type: number
        auto_average_storage_freight:
          type: number
        auto_average_freight_1:
          type: number
        auto_average_freight_2:
          type: number
        auto_average_freight_3:
          type: number
        tele_average_freight_1:
          type: number
        tele_average_freight_2:
          type: number
        tele_average_freight_3:
          type: number
        tele_average_shared_freight:
          type: number
        end_average_delivered:
          type: number
        end_percent_hub_balanced:
          type: number
        end_percent_shared_hub_unbalanced:
          type: number
        end_percent_partially_in_warehouse:
          type: number
        end_percent_completely_in_warehouse:
          type: number
        percent_capped:
          type: number
        percent_carousel:
          type: number
    SkyStoneInsights:
      type: object
      properties:
        auto_average_skystones_delivered:
          type: number
        auto_average_stones_delivered:
          type: number
        auto_average_placed:
          type: number
        auto_percent_parked:
          type: number
        percent_foundation_moved:
          type: number
        percent_foundation_repositioned:
          type: number
        tele_average_placed:
          type: number
        tele_average_returned:
          type: number
        tele_average_delivered:
          type: number
        end_average_cap_level:
          type: number
        end_average_tower_bonus:
          type: number
        end_average_cap_bonus:
          type: number
        end_average_level_bonus:
          type: number
        end_percent_parked:
          type: number
        auto_percent_naved:
          type: number
    UltimateGoalInsights:
      type: object
      properties:
        auto_average_rings_scored_high:
          type: number
        auto_average_rings_scored_mid:
          type: number
        auto_average_rings_scored_low:
          type: number
        auto_average_power_shots:
          type: number
        auto_percent_wobbles_delivered:
          type: number
        auto_percent_navigated:
          type: number
        tele_average_rings_scored_high:
          type: number
        tele_average_rings_scored_mid:
          type: number
        tele_average_rings_scored_low:
          type: number
        end_average_rings_on_wobble:
          type: number
        end_percent_wobbles_on_start:
          type: number
        end_percent_wobbles_in_drop_zone:
          type: number
        end_average_power_shots:
          type: number
    RelicRecoveryInsights:
      type: object
      properties:
        auto_average_glyphs:
          type: number
        tele_average_glyphs:
          type: number
        tele_average_ciphers:
          type: number
        end_average_relic1:
          type: number
        end_average_relic2:
          type: number
        end_average_relic3:
          type: number
        end_percent_relics_standing:
          type: number
        end_average_balanced:
          type: number
    RoverRuckusInsights:
      type: object
      properties:
        auto_percent_landing:
          type: number
        auto_percent_sampling:
          type: number
        auto_percent_claiming:
          type: number
        auto_percent_parking:
          type: number
        tele_avg_golds:
          type: number
        tele_avg_silvers:
          type: number
        tele_avg_depot_minerals:
          type: number
        end_percent_latched:
          type: number
        end_percent_parked:
          type: number
    RoverRuckusMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: number
        match_key:
          type: number
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red_auto_land:
          type: number
        red_auto_samp:
          type: number
        red_auto_claim:
          type: number
        red_auto_park:
          type: number
        red_tele_gold:
          type: number
        red_tele_silver:
          type: number
        red_tele_depot:
          type: number
        red_end_latch:
          type: number
        red_end_in:
          type: number
        red_end_comp:
          type: number
        blue_auto_land:
          type: number
        blue_auto_samp:
          type: number
        blue_auto_claim:
          type: number
        blue_auto_park:
          type: number
        blue_tele_gold:
          type: number
        blue_tele_silver:
          type: number
        blue_tele_depot:
          type: number
        blue_end_latch:
          type: number
        blue_end_in:
          type: number
        blue_end_comp:
          type: number
    UltimateGoalMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: string
        match_key:
          type: string
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red:
          $ref: '#/components/schemas/UltimateGoalAllianceDetails'
        blue:
          $ref: '#/components/schemas/UltimateGoalAllianceDetails'
    UltimateGoalAllianceDetails:
      type: object
      properties:
        auto_wobble_delivered_1:
          type: boolean
        auto_wobble_delivered_2:
          type: boolean
        auto_navigated_1:
          type: boolean
        auto_navigated_2:
          type: boolean
        auto_nav_pts:
          type: number
        auto_tower_low:
          type: number
        auto_tower_mid:
          type: number
        auto_tower_high:
          type: number
        auto_tower_points:
          type: number
        auto_power_shot_left:
          type: boolean
        auto_power_shot_center:
          type: boolean
        auto_power_shot_right:
          type: boolean
        auto_power_shot_points:
          type: number
        auto_wobble_points:
          type: number
        tele_tower_low:
          type: number
        tele_tower_mid:
          type: number
        tele_tower_high:
          type: number
        end_wobble_rings_1:
          type: number
        end_wobble_rings_2:
          type: number
        end_wobble_1:
          type: number
        end_wobble_2:
          type: number
        end_wobble_points:
          type: number
        end_wobble_ring_points:
          type: number
        end_power_shot_left:
          type: boolean
        end_power_shot_center:
          type: boolean
        end_power_shot_right:
          type: boolean
        end_power_shot_points:
          type: number
    FreightFrenzyAllianceDetails:
      type: object
      properties:
        barcode_element_1:
          $ref: '#/components/schemas/FreightFrenzyBarcodeElement'
        barcode_element_2:
          $ref: '#/components/schemas/FreightFrenzyBarcodeElement'
        carousel:
          type: boolean
        auto_navigated_1:
          $ref: '#/components/schemas/FreightFrenzyParking'
        auto_navigated_2:
          $ref: '#/components/schemas/FreightFrenzyParking'
        auto_nav_points:
          type: number
        auto_bonus_1:
          type: boolean
        auto_bonus_2:
          type: boolean
        auto_bonus_points:
          type: number
        auto_storage_freight:
          type: number
        auto_freight_1:
          type: number
        auto_freight_2:
          type: number
        auto_freight_3:
          type: number
        auto_freight_points:
          type: number
        tele_storage_freight:
          type: number
        tele_freight_1:
          type: number
        tele_freight_2:
          type: number
        tele_freight_3:
          type: number
        tele_alliance_hub_points:
          type: number
        tele_shared_hub_points:
          type: number
        tele_storage_points:
          type: number
        shared_freight:
          type: number
        end_delivered:
          type: number
        end_delivered_points:
          type: number
        alliance_balanced:
          type: boolean
        alliance_balanced_points:
          type: number
        shared_unbalanced:
          type: boolean
        shared_unbalanced_points:
          type: number
        end_parked_1:
          $ref: '#/components/schemas/FreightFrenzyParking'
        end_parked_2:
          $ref: '#/components/schemas/FreightFrenzyParking'
        end_parked_points:
          type: number
        capped:
          type: number
        capped_points:
          type: number
        carousel_points:
          type: number
        total_points:
          type: number
    FreightFrenzyMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: string
        match_key:
          type: string
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red:
          $ref: '#/components/schemas/FreightFrenzyAllianceDetails'
        blue:
          $ref: '#/components/schemas/FreightFrenzyAllianceDetails'
    FreightFrenzyParking:
      type: string
      enum:
        - NONE
        - IN_WAREHOUSE
        - COMPLETELY_IN_WAREHOUSE
        - IN_STORAGE
        - COMPLETELY_IN_STORAGE
    FreightFrenzyBarcodeElement:
      type: string
      enum:
        - DUCK
        - TEAM_SHIPPING_ELEMENT
    RelicRecoveryMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: number
        match_key:
          type: number
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red_auto_jewels:
          type: number
        red_auto_glyphs:
          type: number
        red_auto_keys:
          type: number
        red_auto_parks:
          type: number
        red_tele_glyphs:
          type: number
        red_tele_rows:
          type: number
        red_tele_cols:
          type: number
        red_tele_cyphers:
          type: number
        red_end_relic_1:
          type: number
        red_end_relic_2:
          type: number
        red_end_relic_3:
          type: number
        red_end_relic_standing:
          type: number
        red_end_robot_balances:
          type: number
        blue_auto_jewels:
          type: number
        blue_auto_glyphs:
          type: number
        blue_auto_keys:
          type: number
        blue_auto_parks:
          type: number
        blue_tele_glyphs:
          type: number
        blue_tele_rows:
          type: number
        blue_tele_cols:
          type: number
        blue_tele_cyphers:
          type: number
        blue_end_relic_1:
          type: number
        blue_end_relic_2:
          type: number
        blue_end_relic_3:
          type: number
        blue_end_relic_standing:
          type: number
        blue_end_robot_balances:
          type: number
    SkyStoneAllianceDetails:
      type: object
      properties:
        auto_stone_1:
          type: number
        auto_stone_2:
          type: number
        auto_stone_3:
          type: number
        auto_stone_4:
          type: number
        auto_stone_5:
          type: number
        auto_stone_6:
          type: number
        auto_delivered_skystones:
          type: number
        first_returned_is_skystone:
          type: boolean
        auto_placed:
          type: number
        foundation_repositioned:
          type: boolean
        tele_delivered:
          type: number
        tele_returned:
          type: number
        robot_1:
          $ref: '#/components/schemas/SkyStoneRobotParkingStatus'
        robot_2:
          $ref: '#/components/schemas/SkyStoneRobotParkingStatus'
        foundation_moved:
          type: boolean
        auto_transport_points:
          type: number
        auto_placed_points:
          type: number
        reposition_points:
          type: number
        nav_points:
          type: number
        tele_transport_points:
          type: number
        tele_placed_points:
          type: number
        tower_bonus:
          type: number
        tower_capping_bonus:
          type: number
        tower_level_bonus:
          type: number
        end_robots_parked:
          type: number
    SkyStoneRobotParkingStatus:
      type: object
      properties:
        nav:
          type: boolean
        parked:
          type: boolean
        cap_level:
          type: number
    SkyStoneMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: string
        match_key:
          type: string
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red:
          $ref: '#/components/schemas/SkyStoneAllianceDetails'
        blue:
          $ref: '#/components/schemas/SkyStoneAllianceDetails'
    VelocityVortexMatchDetails:
      type: object
      properties:
        match_detail_key:
          type: number
        match_key:
          type: number
        red_min_pen:
          type: number
        blue_min_pen:
          type: number
        red_maj_pen:
          type: number
        blue_maj_pen:
          type: number
        red_auto_beacons:
          type: number
        red_auto_cap:
          type: number
        red_auto_part_cen:
          type: number
        red_auto_part_cor:
          type: number
        red_auto_robot_1:
          type: number
        red_auto_robot_2:
          type: number
        red_tele_beacons:
          type: number
        red_tele_part_cen:
          type: number
        red_tele_part_cor:
          type: number
        red_tele_cap:
          type: number
        blue_auto_beacons:
          type: number
        blue_auto_cap:
          type: number
        blue_auto_part_cen:
          type: number
        blue_auto_part_cor:
          type: number
        blue_auto_robot_1:
          type: number
        blue_auto_robot_2:
          type: number
        blue_tele_beacons:
          type: number
        blue_tele_part_cen:
          type: number
        blue_tele_part_cor:
          type: number
        blue_tele_cap:
          type: number
  securitySchemes:
    ApiAppID:
      type: apiKey
      in: header
      name: X-Application-Origin
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-TOA-Key
security:
  - ApiAppID: []
    ApiKeyAuth: []
paths:
  /:
    get:
      summary: API Version
      tags:
        - API
      responses:
        '200':
          description: Gives the version info of the API.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
  /event-types:
    get:
      summary: Returns all event types.
      tags:
        - API
        - Event
      responses:
        '200':
          description: Returns all the possible event types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
  /seasons:
    get:
      summary: Get all FTC seasons
      tags:
        - API
      responses:
        '200':
          description: Return all FTC seasons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Season'
  /regions:
    get:
      summary: Get all FTC regions
      tags:
        - API
      responses:
        '200':
          description: Return all FTC regions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
  /leagues:
    get:
      summary: Get all FTC leagues
      tags:
        - API
      responses:
        '200':
          description: Return all FTC leagues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
  /streams:
    get:
      summary: Get all active livestreams
      tags:
        - API
        - Event
      responses:
        '200':
          description: Return all active event livestreams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLiveStream'
  /event:
    get:
      summary: Return all events based on the given query
      tags:
        - Event
      parameters:
        - in: query
          name: league_key
          schema:
            type: string
          description: Filter events by league
        - in: query
          name: region_key
          schema:
            type: string
          description: Filter events by region
        - in: query
          name: season_key
          schema:
            type: string
          description: Filter events by season
        - in: query
          name: type
          schema:
            type: string
          description: Filter events by their type
      responses:
        '200':
          description: Return all events using the given query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /event/size:
    get:
      summary: Event count
      tags:
        - Event
      responses:
        '200':
          description: Returns the amount of events in the database
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
  '/event/{eventKey}':
    get:
      summary: Specific event details
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns event information for a specific event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  '/event/{eventKey}/matches':
    get:
      summary: Event matches
      tags:
        - Event
        - Match
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all matches for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
  '/event/{eventKey}/matches/details':
    get:
      summary: Event match details
      tags:
        - Event
        - Match
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all match details for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchDetails'
  '/event/{eventKey}/matches/participants':
    get:
      summary: Event match participants
      tags:
        - Event
        - Match
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all teams that participated in each match at a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchParticipant'
  '/event/{eventKey}/rankings':
    get:
      summary: Event rankings
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns team rankings for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ranking'
  '/event/{eventKey}/insights':
    get:
      summary: Event insights
      tags:
        - Event
        - Insights
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
        - in: query
          name: type
          description: Specific type of insights. (quals or elims)
          required: true
          schema:
            type: string
            enum:
              - quals
              - elims
      responses:
        '200':
          description: Returns insights for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventInsights'
  '/event/{eventKey}/alliances':
    get:
      summary: Event alliances
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns elimination alliances for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alliance'
  '/event/{eventKey}/streams':
    get:
      summary: Event livestreams
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all available livestreams for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLiveStream'
  '/event/{eventKey}/teams':
    get:
      summary: Event teams
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns list of participating teams for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventParticipant'
  '/event/{eventKey}/awards':
    get:
      summary: Event awards
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all awards for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwardRecipient'
  '/event/{eventKey}/media':
    get:
      summary: Event media
      tags:
        - Event
      parameters:
        - in: path
          name: eventKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all uploaded media for a specific event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
  '/match/all/{seasonKey}':
    get:
      summary: Matches from season
      tags:
        - Match
      parameters:
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
        - in: query
          name: start
          description: 'The place in the database to start, used for pagination'
          required: false
          schema:
            type: number
        - in: query
          name: count
          description: 'Number of matches to return (max 500, default 500)'
          schema:
            type: number
            minimum: 0
            maximum: 500
            default: 500
      responses:
        '200':
          description: All matches from a specific season.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
  /match/size:
    get:
      summary: Match count
      tags:
        - Match
      responses:
        '200':
          description: Returns the amount of matches in the current season database
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
  /match/high-scores:
    get:
      summary: High scoring matches
      tags:
        - Match
      parameters:
        - in: query
          name: type
          description: Type of match to search by
          schema:
            type: string
            enum:
              - quals
              - elims
              - single_team
              - all
          required: false
        - in: query
          name: season_key
          description: Season to query by
          schema:
            type: string
          required: false
        - in: query
          name: penalty
          description: Whether to include matches with penalties
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: Returns the match with the highest score based on the query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
  '/match/{matchKey}':
    get:
      summary: Match info
      tags:
        - Match
      parameters:
        - in: path
          name: matchKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns match information about a specific match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
  '/match/{matchKey}/details':
    get:
      summary: Match details
      tags:
        - Match
      parameters:
        - in: path
          name: matchKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns match details about a specific match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchDetails'
  '/match/{matchKey}/participants':
    get:
      summary: Match participants
      tags:
        - Match
      parameters:
        - in: path
          name: matchKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns teams participating in the specified match
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchParticipant'
  /team:
    get:
      summary: All teams
      tags:
        - Team
      parameters:
        - in: query
          name: league_key
          schema:
            type: string
          required: false
        - in: query
          name: region_key
          schema:
            type: string
          required: false
        - in: query
          name: last_active
          schema:
            type: string
          required: false
        - in: query
          name: country
          schema:
            type: string
          required: false
        - in: query
          name: start
          schema:
            type: number
          required: false
        - in: query
          name: count
          schema:
            type: number
            minimum: 0
            maximum: 500
            default: 500
          required: false
      responses:
        '200':
          description: Returns all teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  /team/size:
    get:
      summary: Team count
      tags:
        - Team
      responses:
        '200':
          description: Returns the amount of teams in the database
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
  '/team/{teamKey}':
    get:
      summary: Team info
      tags:
        - Team
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
      responses:
        '200':
          description: Returns basic information on the specific team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  '/team/{teamKey}/wlt':
    get:
      summary: Team WLT record
      tags:
        - Team
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
      responses:
        '200':
          description: Returns the Win/Loss/Tie record of the specified team (includes elimination matches)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSeasonRecord'
  '/team/{teamKey}/events/{seasonKey}':
    get:
      summary: Team events
      tags:
        - Team
        - Event
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all events a team participated in for a given season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventParticipant'
  '/team/{teamKey}/matches/{seasonKey}':
    get:
      summary: Team matches
      tags:
        - Team
        - Match
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all matches a team participated in for a given season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchParticipant'
  '/team/{teamKey}/awards/{seasonKey}':
    get:
      summary: Team awards
      tags:
        - Team
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all awardsa team received for a given season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwardRecipient'
  '/team/{teamKey}/results/{seasonKey}':
    get:
      summary: Team results
      tags:
        - Team
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns final rankings for a team in a specific season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ranking'
  '/team/{teamKey}/media/{seasonKey}':
    get:
      summary: Team media
      tags:
        - Team
      parameters:
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all media uploaded for a team in a given season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
  '/team/history/{seasonKey}':
    get:
      summary: Historical teams
      tags:
        - Team
      parameters:
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
        - in: query
          name: league_key
          schema:
            type: string
          required: false
        - in: query
          name: region_key
          schema:
            type: string
          required: false
        - in: query
          name: last_active
          schema:
            type: string
          required: false
        - in: query
          name: country
          schema:
            type: string
          required: false
        - in: query
          name: start
          schema:
            type: number
          required: false
        - in: query
          name: count
          schema:
            type: number
            minimum: 0
            maximum: 500
            default: 500
          required: false
      responses:
        '200':
          description: 'Returns all teams, as they were in TIMS at the end of the requested season'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  '/team/history/{seasonKey}/{teamKey}':
    get:
      summary: Historical team
      tags:
        - Team
      parameters:
        - in: path
          name: seasonKey
          schema:
            type: string
          required: true
        - in: path
          name: teamKey
          schema:
            type: number
            minimum: 1
          required: true
      responses:
        '200':
          description: 'Returns a team, as it was in TIMS at the end of the requested season'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /web/announcements:
    get:
      summary: Live web announcements
      tags:
        - Web
      responses:
        '200':
          description: Returns all live web announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebAnnouncement'
  '/league/{leagueKey}':
    get:
      summary: League info
      tags:
        - League
      parameters:
        - in: path
          name: leagueKey
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns information on the given league
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
  /league/divisions:
    get:
      summary: League divisions
      tags:
        - League
      parameters:
        - in: query
          name: league_key
          schema:
            type: string
          required: false
        - in: query
          name: region_key
          schema:
            type: string
          required: false
        - in: query
          name: season_key
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Returns all league divisions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeagueDiv'
